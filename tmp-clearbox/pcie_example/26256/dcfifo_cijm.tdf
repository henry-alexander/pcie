--dcfifo_mixed_widths ADD_RAM_OUTPUT_REGISTER="ON" CARRY_CHAIN="MANUAL" DEVICE_FAMILY="Agilex 5" DISABLE_DCFIFO_EMBEDDED_TIMING_CONSTRAINT="TRUE" ENABLE_ECC="FALSE" LPM_NUMWORDS=8 LPM_SHOWAHEAD="OFF" LPM_WIDTH=48 LPM_WIDTH_R=48 LPM_WIDTHU=3 LPM_WIDTHU_R=3 OVERFLOW_CHECKING="OFF" RAM_BLOCK_TYPE="MLAB" RDSYNC_DELAYPIPE=4 READ_ACLR_SYNCH="OFF" UNDERFLOW_CHECKING="OFF" USE_EAB="ON" WRITE_ACLR_SYNCH="ON" WRSYNC_DELAYPIPE=4 aclr data q rdclk rdempty rdreq wrclk wrfull wrreq ACF_BLOCK_RAM_AND_MLAB_EQUIVALENT_PAUSED_READ_CAPABILITIES="CARE" CYCLONEII_M4K_COMPATIBILITY="ON" INTENDED_DEVICE_FAMILY="Agilex 5" LOW_POWER_MODE="AUTO" lpm_hint="DISABLE_DCFIFO_EMBEDDED_TIMING_CONSTRAINT=TRUE" ALTERA_INTERNAL_OPTIONS=AUTO_SHIFT_REGISTER_RECOGNITION=OFF
--VERSION_BEGIN 23.4 cbx_a_gray2bin 2023:12:13:21:31:55:SC cbx_a_graycounter 2023:12:13:21:31:55:SC cbx_altdpram 2023:12:13:21:31:55:SC cbx_altera_counter 2023:12:13:21:31:54:SC cbx_altera_gray_counter 2023:12:13:21:31:54:SC cbx_altera_syncram 2023:12:13:21:31:54:SC cbx_altera_syncram_ltm 2023:12:13:21:31:54:SC cbx_altera_syncram_nd_impl 2023:12:13:21:31:59:SC cbx_altsyncram 2023:12:13:21:31:54:SC cbx_dcfifo 2023:12:13:21:31:55:SC cbx_fifo_common 2023:12:13:21:31:55:SC cbx_libertymesa 2023:12:13:21:31:55:SC cbx_lpm_add_sub 2023:12:13:21:31:55:SC cbx_lpm_compare 2023:12:13:21:31:59:SC cbx_lpm_counter 2023:12:13:21:31:54:SC cbx_lpm_decode 2023:12:13:21:31:54:SC cbx_lpm_mux 2023:12:13:21:31:59:SC cbx_mgl 2023:12:13:21:32:06:SC cbx_nadder 2023:12:13:21:31:55:SC cbx_scfifo 2023:12:13:21:31:55:SC cbx_stratix 2023:12:13:21:31:59:SC cbx_stratixii 2023:12:13:21:31:59:SC cbx_stratixiii 2023:12:13:21:31:59:SC cbx_stratixv 2023:12:13:21:31:55:SC cbx_util_mgl 2023:12:13:21:31:59:SC  VERSION_END


-- Copyright (C) 2024  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the Intel FPGA Software License Subscription Agreements 
--  on the Quartus Prime software download page.


FUNCTION dpram_88e (aclr, data[47..0], inclock, outclock, outclocken, rdaddress[2..0], wraddress[2..0], wren)
RETURNS ( q[47..0]);
FUNCTION altera_gray_counter (clk, enable, reset)
WITH ( PVALUE, WIDTH = 6)
RETURNS ( q[WIDTH-1..0]);
FUNCTION alt_synch_pipe_54s7 (clock, clrn, d[3..0])
RETURNS ( q[3..0]);
FUNCTION dffpipe_tni61 (clock, clrn, d[0..0])
RETURNS ( q[0..0]);
FUNCTION cmpr_j2561 (dataa[3..0], datab[3..0])
RETURNS ( aeb);

--synthesis_resources = altera_gray_counter 2 MLAB 3 reg 61 
OPTIONS ALTERA_INTERNAL_OPTION = "AUTO_SHIFT_REGISTER_RECOGNITION=OFF;REMOVE_DUPLICATE_REGISTERS=OFF;SYNCHRONIZER_IDENTIFICATION=OFF;SYNCHRONIZATION_REGISTER_CHAIN_LENGTH = 2;suppress_da_rule_internal=d101;suppress_da_rule_internal=d102;suppress_da_rule_internal=d103;suppress_da_rule_internal=R105;{-to wrptr_g1p} suppress_da_rule_internal=S102;{-to wrptr_g} suppress_da_rule_internal=S102;{-to wrptr_g} POWER_UP_LEVEL=LOW";

SUBDESIGN dcfifo_cijm
( 
	aclr	:	input;
	data[47..0]	:	input;
	q[47..0]	:	output;
	rdclk	:	input;
	rdempty	:	output;
	rdreq	:	input;
	wrclk	:	input;
	wrfull	:	output;
	wrreq	:	input;
) 
VARIABLE 
	fifo_lutram : dpram_88e;
	rdptr_g1p : altera_gray_counter
		WITH (
			PVALUE = 1,
			WIDTH = 4
		);
	wrptr_g1p : altera_gray_counter
		WITH (
			PVALUE = 1,
			WIDTH = 4
		);
	delayed_wrptr_g[3..0] : dffe;
	rdptr_g[3..0] : dffe;
	rdptr_g1p_dffe[0..0] : dffe;
	wrptr_g[3..0] : dffe
		WITH (
			power_up = "low"
		);
	rs_dgwp : alt_synch_pipe_54s7;
	wraclr : dffpipe_tni61;
	ws_dgrp : alt_synch_pipe_54s7;
	rdempty_eq_comp : cmpr_j2561;
	wrfull_eq_comp : cmpr_j2561;
	int_rdempty	: WIRE;
	int_wrfull	: WIRE;
	ram_rdaddress[2..0]	: WIRE;
	ram_wraddress[2..0]	: WIRE;
	temp_read[0..0]	: WIRE;
	valid_rdreq	: WIRE;
	valid_wrreq	: WIRE;
	wrptr_gs[3..0]	: WIRE;

BEGIN 
	fifo_lutram.aclr = aclr;
	fifo_lutram.data[] = data[];
	fifo_lutram.inclock = wrclk;
	fifo_lutram.outclock = rdclk;
	fifo_lutram.outclocken = valid_rdreq;
	fifo_lutram.rdaddress[] = ram_rdaddress[];
	fifo_lutram.wraddress[] = ram_wraddress[];
	fifo_lutram.wren = valid_wrreq;
	rdptr_g1p.clk = rdclk;
	rdptr_g1p.enable = valid_rdreq;
	rdptr_g1p.reset = aclr;
	wrptr_g1p.clk = wrclk;
	wrptr_g1p.enable = valid_wrreq;
	wrptr_g1p.reset = (! wraclr.q[]);
	delayed_wrptr_g[].clk = wrclk;
	delayed_wrptr_g[].clrn = wraclr.q[];
	delayed_wrptr_g[].d = wrptr_g[].q;
	rdptr_g[].clk = rdclk;
	rdptr_g[].clrn = (! aclr);
	rdptr_g[].d = rdptr_g1p.q[];
	rdptr_g[].ena = valid_rdreq;
	rdptr_g1p_dffe[].clk = rdclk;
	rdptr_g1p_dffe[].clrn = (! aclr);
	rdptr_g1p_dffe[].d = temp_read[];
	rdptr_g1p_dffe[].ena = valid_rdreq;
	wrptr_g[].clk = wrclk;
	wrptr_g[].clrn = wraclr.q[];
	wrptr_g[].d = wrptr_g1p.q[];
	wrptr_g[].ena = valid_wrreq;
	rs_dgwp.clock = rdclk;
	rs_dgwp.clrn = (! aclr);
	rs_dgwp.d[] = delayed_wrptr_g[].q;
	wraclr.clock = wrclk;
	wraclr.clrn = (! aclr);
	wraclr.d[] = B"1";
	ws_dgrp.clock = wrclk;
	ws_dgrp.clrn = wraclr.q[];
	ws_dgrp.d[] = rdptr_g[].q;
	rdempty_eq_comp.dataa[] = rs_dgwp.q[];
	rdempty_eq_comp.datab[] = rdptr_g[].q;
	wrfull_eq_comp.dataa[] = ws_dgrp.q[];
	wrfull_eq_comp.datab[] = wrptr_gs[];
	int_rdempty = rdempty_eq_comp.aeb;
	int_wrfull = wrfull_eq_comp.aeb;
	q[] = fifo_lutram.q[];
	ram_rdaddress[] = ( rdptr_g1p_dffe[].q, rdptr_g[1..0].q);
	ram_wraddress[] = ( (wrptr_g[3..3].q $ wrptr_g[2..2].q), wrptr_g[1..0].q);
	rdempty = int_rdempty;
	temp_read[] = (rdptr_g1p.q[3..3] $ rdptr_g1p.q[2..2]);
	valid_rdreq = rdreq;
	valid_wrreq = (wrreq & wraclr.q[]);
	wrfull = (int_wrfull # (! wraclr.q[]));
	wrptr_gs[] = ( (! wrptr_g[3..3].q), (! wrptr_g[2..2].q), wrptr_g[1..0].q);
END;
--VALID FILE
